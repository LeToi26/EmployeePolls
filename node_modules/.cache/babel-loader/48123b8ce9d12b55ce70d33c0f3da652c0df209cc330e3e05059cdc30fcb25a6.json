{"ast":null,"code":"import productApi from \"../api/productApi\";\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const LOGOUT_CURRENT_USER = \"LOGOUT_CURRENT_USER\";\nexport const CREATE_QUESTION = \"CREATE_QUESTION\";\nexport const ADD_ANSWER_QUESTION = \"ADD_ANSWER_QUESTION\";\nexport const ADD_ANSWER_USER = \"ADD_ANSWER_USER\";\nexport const CREATE_QUESTION_USER = \"CREATE_QUESTION_USER\";\nexport function initialData() {\n  return dispatch => {\n    return productApi.getInitialData().then(_ref => {\n      let {\n        users,\n        questions\n      } = _ref;\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n    });\n  };\n}\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    users\n  };\n}\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\nexport function handleLogout() {\n  return dispatch => {\n    return dispatch(logoutCurrentUser());\n  };\n}\nexport function logoutCurrentUser() {\n  return {\n    type: LOGOUT_CURRENT_USER\n  };\n}\nexport function handleLogin(username, password) {\n  return (dispatch, getState) => {\n    const {\n      State\n    } = getState();\n    const user = Object.values(State.users).find(user => user.id === username && user.password === password);\n    if (!!user) {\n      return dispatch(setCurrentUser(user));\n    }\n  };\n}\nexport function setCurrentUser(authedUser) {\n  return {\n    type: SET_CURRENT_USER,\n    authedUser\n  };\n}\nexport function handleAddAnswer(questionId, answer) {\n  return (dispatch, getState) => {\n    const {\n      State\n    } = getState();\n    return productApi.saveQuestionAnswer(State.authedUser.id, questionId, answer).then(() => {\n      dispatch(addAnswerQuestion(State.authedUser.id, questionId, answer));\n      dispatch(addAnswerUser(State.authedUser.id, questionId, answer));\n    });\n  };\n}\nfunction addAnswerQuestion(author, qid, answer) {\n  return {\n    type: ADD_ANSWER_QUESTION,\n    author,\n    qid,\n    answer\n  };\n}\nexport function addAnswerUser(authedUser, qid, answer) {\n  return {\n    type: ADD_ANSWER_USER,\n    authedUser,\n    qid,\n    answer\n  };\n}\nexport function handleCreateQuestion(firstOption, secondOption) {\n  return (dispatch, getState) => {\n    const {\n      State\n    } = getState();\n    return productApi.saveQuestion(firstOption, secondOption, State.authedUser).then(question => {\n      dispatch(createQuestion(question));\n      dispatch(createQuestionUser(question));\n    });\n  };\n}\nexport function createQuestionUser(question) {\n  const {\n    author,\n    id\n  } = question;\n  return {\n    type: CREATE_QUESTION_USER,\n    author,\n    qid: id\n  };\n}\nfunction createQuestion(question) {\n  return {\n    type: CREATE_QUESTION,\n    question\n  };\n}","map":{"version":3,"names":["productApi","RECEIVE_USERS","RECEIVE_QUESTIONS","SET_CURRENT_USER","LOGOUT_CURRENT_USER","CREATE_QUESTION","ADD_ANSWER_QUESTION","ADD_ANSWER_USER","CREATE_QUESTION_USER","initialData","dispatch","getInitialData","then","_ref","users","questions","receiveUsers","receiveQuestions","type","handleLogout","logoutCurrentUser","handleLogin","username","password","getState","State","user","Object","values","find","id","setCurrentUser","authedUser","handleAddAnswer","questionId","answer","saveQuestionAnswer","addAnswerQuestion","addAnswerUser","author","qid","handleCreateQuestion","firstOption","secondOption","saveQuestion","question","createQuestion","createQuestionUser"],"sources":["C:/Users/Admin/Downloads/EmployeePolls/src/shared/store/actions.ts"],"sourcesContent":["import { InitialState, Questions, User, Users } from \"shared/model/poll\";\r\nimport productApi from \"../api/productApi\";\r\nimport { Dispatch } from \"@reduxjs/toolkit\";\r\n\r\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\r\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const LOGOUT_CURRENT_USER = \"LOGOUT_CURRENT_USER\";\r\n\r\nexport const CREATE_QUESTION = \"CREATE_QUESTION\";\r\nexport const ADD_ANSWER_QUESTION = \"ADD_ANSWER_QUESTION\";\r\n\r\nexport const ADD_ANSWER_USER = \"ADD_ANSWER_USER\";\r\nexport const CREATE_QUESTION_USER = \"CREATE_QUESTION_USER\";\r\n\r\nexport function initialData() {\r\n  return (dispatch: Dispatch) => {\r\n    return productApi\r\n      .getInitialData()\r\n      .then(({ users, questions }: { users: any; questions: any }) => {\r\n        dispatch(receiveUsers(users));\r\n        dispatch(receiveQuestions(questions));\r\n      });\r\n  };\r\n}\r\n\r\nexport function receiveUsers(users: Users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users,\r\n  };\r\n}\r\n\r\nexport function receiveQuestions(questions: Questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions,\r\n  };\r\n}\r\n\r\nexport function handleLogout() {\r\n  return (dispatch: Dispatch) => {\r\n    return dispatch(logoutCurrentUser());\r\n  };\r\n}\r\n\r\nexport function logoutCurrentUser() {\r\n  return {\r\n    type: LOGOUT_CURRENT_USER,\r\n  };\r\n}\r\n\r\nexport function handleLogin(username: string, password: string) {\r\n  return (dispatch: Dispatch, getState: () => { State: InitialState }) => {\r\n    const { State } = getState();\r\n    const user: any = Object.values(State.users).find(\r\n      (user: any) => user.id === username && user.password === password\r\n    );\r\n    if (!!user) {\r\n      return dispatch(setCurrentUser(user));\r\n    }\r\n  };\r\n}\r\n\r\nexport function setCurrentUser(authedUser: User | {}) {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    authedUser,\r\n  };\r\n}\r\n\r\nexport function handleAddAnswer(questionId: string, answer: string) {\r\n  return (dispatch: Dispatch, getState: () => { State: InitialState }) => {\r\n    const { State } = getState();\r\n    return productApi\r\n      .saveQuestionAnswer(State.authedUser.id, questionId, answer)\r\n      .then(() => {\r\n        dispatch(addAnswerQuestion(State.authedUser.id, questionId, answer));\r\n        dispatch(addAnswerUser(State.authedUser.id, questionId, answer));\r\n      });\r\n  };\r\n}\r\n\r\nfunction addAnswerQuestion(author: string, qid: string, answer: string) {\r\n  return {\r\n    type: ADD_ANSWER_QUESTION,\r\n    author,\r\n    qid,\r\n    answer,\r\n  };\r\n}\r\n\r\nexport function addAnswerUser(authedUser: string, qid: string, answer: string) {\r\n  return {\r\n    type: ADD_ANSWER_USER,\r\n    authedUser,\r\n    qid,\r\n    answer,\r\n  };\r\n}\r\n\r\nexport function handleCreateQuestion(\r\n  firstOption: string,\r\n  secondOption: string\r\n) {\r\n  return (dispatch: Dispatch, getState: () => { State: InitialState }) => {\r\n    const { State } = getState();\r\n\r\n    return productApi\r\n      .saveQuestion(firstOption, secondOption, State.authedUser)\r\n      .then((question) => {\r\n        dispatch(createQuestion(question));\r\n        dispatch(createQuestionUser(question));\r\n      });\r\n  };\r\n}\r\n\r\nexport function createQuestionUser(question: any) {\r\n  const { author, id } = question;\r\n  return {\r\n    type: CREATE_QUESTION_USER,\r\n    author,\r\n    qid: id,\r\n  };\r\n}\r\n\r\nfunction createQuestion(question: any) {\r\n  return {\r\n    type: CREATE_QUESTION,\r\n    question,\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}